name: Java Maven Build & Publish Artifact

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn -B package --file pom.xml

  publish-job:
    runs-on: ubuntu-latest
    needs: build_test
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Run tests and verify build
        run: mvn --batch-mode --update-snapshots verify

      - name: Copy JAR to staging
        run: |
          mkdir staging
          cp target/gs-maven-0.1.0.jar staging/

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: Package
          path: staging

  docker_publish:
    runs-on: ubuntu-latest
    needs: publish-job
    steps:
      - uses: actions/checkout@v3

      - name: Download JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: Package
          path: staging

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build Docker image
        run: |
          cp staging/gs-maven-0.1.0.jar app.jar
          docker build -t ${{ vars.ECR_REPOSITORY }}:latest .

      - name: Tag Docker image
        run: |
          docker tag ${{ vars.ECR_REPOSITORY }}:latest ${{ vars.ECR_REGISTRY }}/${{ vars.ECR_REPOSITORY }}:latest

      - name: Push Docker image to ECR
        run: |
          docker push ${{ vars.ECR_REGISTRY }}/${{ vars.ECR_REPOSITORY }}:latest
